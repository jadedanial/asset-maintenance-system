# Generated by Django 4.1.5 on 2023-02-14 15:29

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('asset_id', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='Asset ID')),
                ('asset_model', models.CharField(max_length=100, verbose_name='Model')),
                ('asset_sector', models.CharField(max_length=100, verbose_name='Sector')),
                ('asset_area', models.CharField(max_length=100, verbose_name='Area')),
                ('asset_serial', models.CharField(max_length=200, verbose_name='Serial')),
                ('asset_plate', models.CharField(blank=True, max_length=100, null=True, verbose_name='Plate Number')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('req_id', models.CharField(blank=True, max_length=500, null=True, verbose_name='Work Request ID')),
                ('asset_id', models.CharField(max_length=100, verbose_name='Asset ID')),
                ('req_createby', models.CharField(max_length=500, verbose_name='Created By')),
                ('req_checkby', models.CharField(max_length=500, verbose_name='Checked By')),
                ('req_date', models.CharField(max_length=100, verbose_name='Date')),
                ('req_status', models.CharField(max_length=300, verbose_name='Request Status')),
                ('req_workshop', models.CharField(max_length=300, verbose_name='Workshop')),
                ('req_physloc', models.CharField(max_length=500, verbose_name='Physical Location')),
                ('req_maint', models.CharField(max_length=300, verbose_name='Maintenance Type')),
                ('req_repair', models.CharField(max_length=300, verbose_name='Repair Type')),
                ('req_km', models.CharField(max_length=100, verbose_name='Kilometer')),
                ('req_enghr', models.CharField(blank=True, max_length=100, null=True, verbose_name='Engine Hour')),
                ('req_fuel', models.CharField(blank=True, max_length=100, null=True, verbose_name='Fuel Quantity')),
                ('req_desc', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=50, verbose_name='Section Label')),
                ('key', models.CharField(blank=True, max_length=100, null=True, verbose_name='Key')),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('shift_name', models.CharField(max_length=300, verbose_name='Name')),
                ('shift_from', models.TimeField(verbose_name='From')),
                ('shift_to', models.TimeField(verbose_name='To')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sched_name', models.CharField(max_length=300, verbose_name='Name')),
                ('sched_fri', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sched_fri', to='ams.shift', verbose_name='Friday')),
                ('sched_mon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sched_mon', to='ams.shift', verbose_name='Monday')),
                ('sched_sat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sched_sat', to='ams.shift', verbose_name='Satuday')),
                ('sched_sun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sched_sun', to='ams.shift', verbose_name='Sunday')),
                ('sched_thu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sched_thu', to='ams.shift', verbose_name='Thurdsay')),
                ('sched_tue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sched_tue', to='ams.shift', verbose_name='Tuesday')),
                ('sched_wed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sched_wed', to='ams.shift', verbose_name='Wednesday')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=50, verbose_name='Module Label')),
                ('key', models.CharField(blank=True, max_length=100, null=True, verbose_name='Key')),
                ('icon', models.CharField(blank=True, max_length=100, null=True, verbose_name='Icon')),
                ('children', models.ManyToManyField(blank=True, to='ams.section', verbose_name='Children')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('emp_id', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='Employee ID')),
                ('emp_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('emp_bdate', models.DateField(blank=True, null=True, verbose_name='Birthdate')),
                ('emp_nation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nationality')),
                ('emp_salary', models.PositiveIntegerField(blank=True, null=True, verbose_name='Monthly Salary')),
                ('emp_position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Position')),
                ('emp_hired', models.DateField(blank=True, null=True, verbose_name='Date Hired')),
                ('emp_dayoff', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dayoff')),
                ('emp_email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('emp_phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Phone')),
                ('emp_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address')),
                ('emp_sched', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ams.schedule', verbose_name='Schedule')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attend_date', models.DateField(verbose_name='Date')),
                ('attend_checkin', models.TimeField(blank=True, null=True, verbose_name='Check In')),
                ('attend_checkout', models.TimeField(blank=True, null=True, verbose_name='Check Out')),
                ('attend_latein', models.FloatField(blank=True, null=True, verbose_name='Late In')),
                ('attend_earlyout', models.FloatField(blank=True, null=True, verbose_name='Early Out')),
                ('attend_work', models.FloatField(blank=True, null=True, verbose_name='Worked')),
                ('attend_req', models.FloatField(blank=True, null=True, verbose_name='Required')),
                ('attend_under', models.FloatField(blank=True, null=True, verbose_name='Undertime')),
                ('attend_over', models.FloatField(blank=True, null=True, verbose_name='Overtime')),
                ('attend_excuse', models.FloatField(blank=True, null=True, verbose_name='Excuse')),
                ('attend_status', models.CharField(blank=True, max_length=300, null=True, verbose_name='Status')),
                ('emp_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ams.employee', verbose_name='Employee ID')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('empID', models.PositiveIntegerField(blank=True, null=True, verbose_name='Employee ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Username')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('password', models.CharField(max_length=100, verbose_name='Password')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
